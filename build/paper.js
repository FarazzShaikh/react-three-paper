import n,{useRef as e,useState as t,useCallback as r,useEffect as c}from"react";const o={threshold:.01};function i({script:i,style:a,onExit:s,onEntry:l,onError:m}){const u=e(null),[h,f]=t(null),y=r((async(n,e)=>{try{const e=await n;f(e)}catch(n){e(n)}}),[]);return c((()=>{let n=0;if(null!==h){const{render:t,cleanup:r}=h;function e(r){t(r),n=requestAnimationFrame(e)}let c=new IntersectionObserver((([t])=>{const{isIntersecting:r}=t;r?(l&&l(t),n=requestAnimationFrame(e)):(s&&s(t),cancelAnimationFrame(n))}),o);return c.observe(u.current),()=>{c.disconnect(),n&&cancelAnimationFrame(n),r&&r()}}y(i(u.current),(e=>{console.error(e),cancelAnimationFrame(n),m&&m(e)}))}),[i,u,h]),n.createElement("canvas",{ref:u,style:{width:"100%",height:"100%",...a}})}export{i as Paper};
//# sourceMappingURL=paper.js.map
